apiVersion: v1
kind: Namespace
metadata:
  name: local-path-storage

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-path
provisioner: rancher.io/local-path
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: local-path-config
  namespace: local-path-storage
data:
  config.json: |-
    {
            "nodePathMap":[
            {
                    "node":"DEFAULT_PATH_FOR_NON_LISTED_NODES",
                    "paths":["/opt/local-path-provisioner"]
            },
            {
                    "node":"yasker-lp-dev1",
                    "paths":["/opt/local-path-provisioner", "/data1"]
            },
            {
                    "node":"yasker-lp-dev3",
                    "paths":[]
            }
            ]
    }
  setup: |-
    #!/bin/sh
    while getopts "m:s:p:" opt
    do
        case $opt in
            p)
            absolutePath=$OPTARG
            ;;
            s)
            sizeInBytes=$OPTARG
            ;;
            m)
            volMode=$OPTARG
            ;;
        esac
    done

    xfsPath=$(dirname "$absolutePath")
    pvcName=$(basename "$absolutePath")
    mkdir -p ${absolutePath}

    # support xfs quota
    type=`stat -f -c %T ${xfsPath}`
    if [ ${type} == 'xfs' ]; then

        echo "support xfs quota"

        project=`cat /etc/projects | tail -n 1`
        id=`echo ${project%:*}`

        if [ ! ${project} ]; then
            id=1
        else
            id=$[${id}+1]
        fi

        echo "${id}:${absolutePath}" >> /etc/projects
        echo "${pvcName}:${id}" >> /etc/projid

        xfs_quota -x -c "project -s ${pvcName}"
        xfs_quota -x -c "limit -p bhard=${sizeInBytes} ${pvcName}" ${xfsPath}
        xfs_quota -x -c "report -pbih" ${xfsPath}
    fi

  teardown: |-
    #!/bin/sh
    while getopts "m:s:p:" opt
    do
        case $opt in
            p)
            absolutePath=$OPTARG
            ;;
            s)
            sizeInBytes=$OPTARG
            ;;
            m)
            volMode=$OPTARG
            ;;
        esac
    done

    xfsPath=$(dirname "$absolutePath")
    pvcName=$(basename "$absolutePath")

    # support xfs quota
    type=`stat -f -c %T ${xfsPath}`
    if [ ${type} == 'xfs' ]; then

        echo "support xfs quota"
        xfs_quota -x -c "limit -p bhard=0 ${pvcName}" ${xfsPath}
    fi

    rm -rf ${absolutePath}
    if [ ${type} == 'xfs' ]; then
        echo "$(sed "/${pvcName}/d" /etc/projects)" >  /etc/projects
        echo "$(sed "/${pvcName}/d" /etc/projid)" >  /etc/projid
        xfs_quota -x -c "report -pbih" ${xfsPath}
    fi

  helperPod.yaml: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: helper-pod
    spec:
      containers:
      - name: helper-pod
        image: xxx/storage-xfs-quota:v0.1
        imagePullPolicy: Always
        securityContext:
          privileged: true
        volumeMounts:
        - name: xfs-quota-projects
          subPath: projects
          mountPath: /etc/projects
        - name: xfs-quota-projects
          subPath: projid
          mountPath: /etc/projid
        - name: device-dir
          mountPath: /dev
      volumes:
      - name: xfs-quota-projects
        hostPath:
          path: /etc/projects
          type: FileOrCreate
      - name: xfs-quota-projid
        hostPath:
          path: /etc/projid
          type: FileOrCreate
      - name: device-dir
        hostPath:
          path: /dev
